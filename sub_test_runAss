#!/usr/bin/perl
#use strict;
use warnings;
my $qsub = ('qsub -I -q classroom');
my $module_load= ('module load 454');
my $runAssembly= ('runAssembly');
my $current_dir= `pwd`;
chomp $current_dir;

my @paravals=(30,30,95);
my $folder_name_for_it="project_test";

##################################################################################################################################################
sub run_Assembly {
#put together intial argumets to pass to runAssembly

#default arguments to run
my @args_def= ('-o',"$folder_name_for_it",
'-force',
#'-qo',
'-cpu','0',
#'-vt','trim_file_adapter_primers.fasta',
'-vs','-m','both_trimfiles.fasta',  # hard code.....
'mid_MID1.sff'); # hard code.....

# relabel out from para_combo_gen to paravals

#set up parameters to pass into system
my @para_args=(
'-minlen',"$paravals[0]",
#Minimum length of reads to use in assembly Default: 50 Min: 15

'-ss','1',
#Set seed step parameter 1 to 15

'-sl','10',
#Set seed length parameter 1 to 15

'-sc','10 ',
#Set seed count parameter 1 to 15

'-ml',"$paravals[1]",
#Set minimum overlap length 15 to 40

'-mi',"$paravals[2]",
#Set minimum overlap identify 90 to 99
);
print"running $runAssembly with:\n
	@para_args and @args_def \n";
system($runAssembly,@para_args,@args_def);

#convert array of parameters to string
#@string_para_args= joing(",",@para_args);

#output string paras and folder name
@runAssembly_paras=($folder_name_for_it,@para_args);

return;
}
##########################################################

print "starting test done";

run_Assembly($folder_name_for_it,@paravals);

print "testdone";
die;
